EsaMattiTastula-FirstModule

PERL web service file manipulation project
------------------------------------------

# Development Environment Setup

1. Clone the github repo
2. Install perlbrew to allow you to manage multiple versions of perl (http://perlbrew.pl/)
3. See what versions of perl are available:
	```
	perl tsullivan$ perlbrew available
	i perl-5.23.0
	  perl-5.22.0
	  perl-5.20.2
	  perl-5.18.4
	  perl-5.16.3
	  perl-5.14.4
	  perl-5.12.5
	  perl-5.10.1
	  perl-5.8.9
	  perl-5.6.2
	  perl5.005_04
	  perl5.004_05
	  perl5.003_07
	```  

4. Install one or more version(s) of perl
	```
	perlbrew install perl-5.23.0
	```

4. Switch into an "isolated perl sandbox" with the version you want
	```
	perlbrew switch perl-5.23.0
	```

5. Install the cpanm perl package management tool (this command auto installs it across all perlbrew managed perl versions)
	
	```
	perlbrew install-cpanm
	```

6. Install PadWalker to get debugging support in EPIC  (the Eclipse Perl IDE) using the cpanm perl package management tool 

	```
	cpanm PadWalker
	```

7. Install jEnv which enables management of multiple versions of Java (http://www.jenv.be/)
8. Use jEnv to install the appropriate version of Java needed to run eclipse (at time of this writing it was Java 7)
9. Install eclipse IDE (http://www.eclipse.org/downloads/) - needed version 3.7.2 to get EPIC to work
10. Install EPIC Eclipse plugin for eclipse (http://www.epic-ide.org/download.php) - HINT: for me i had to do the "local installaiton" because
    the sourceforge based update site was not found by eclipse when I attempted the normal installation.


# Working with modules

Let's practice creating and testing a cpanm compatible perl package. Then we will learn about
how to write better tests, and then implement code that causes the tests to pass! So below is 
the setup for that. Eventually we will want each perl package to have its own github repo
and be the "root" of the project. So ideally we should fix the folder structure and check that in
to github. 

1. Install Module::Starter
	```
	cpanm Module::Starter
	```
	This installs a package which includes a command line tool, module-starter, which can be used
	to create perl modules that are compatible with cpanm. 

2. Generate a module (use your own name)
	```
	module-starter --module=TommySullivan::FirstModule --author="Tommy Sullivan" --email="tom@tommysullivan.me"

	```
	
3. There should be a new directory for the module (you may need to right click and refresh in eclpise to see it)
 	CD into that directory
 	
4. Generate a makefile for your system
	```
	perl Makefile.pl
	```
	
5. Build your module
	```
	make
	```

6. Test your module
	```
	make test
	```

7. Install your module
	```
	make install
	```
	

# Debugging with Eclipse

1. Set a breakpoint by double clicking on the gray vertical bar to the left side of your perl source code
2. Right click the perl file in the navigator and select "debug as..." to debug through the file.
3. Find "debug configurations" to change settings (like environment variables, arguments, etc) that should be passed by eclipse
	when you run the program
4. In the debugging view, there is a little down carat icon, click it and check "show global variables" so you can see values.


# Travis CI

TODO: We will want to hook travis CI up to our github project once we have passing tests in the right folder
of the repository. This will cause builds to happen upon checkin and anyone can see the build history and the 
test pass / fail history as well as the current status of the repo (is it in a tests passing state?)



The README is used to introduce the module and provide instructions on
how to install the module, any machine dependencies it may have (for
example C compilers and installed libraries) and any other information
that should be provided before the module is installed.

A README file is required for CPAN modules since CPAN extracts the README
file from a module distribution so that people browsing the archive
can use it to get an idea of the module's uses. It is usually a good idea
to provide version information here so that people can decide whether
fixes for the module are worth downloading.


INSTALLATION

To install this module, run the following commands:

	perl Makefile.PL
	make
	make test
	make install

SUPPORT AND DOCUMENTATION

After installing, you can find documentation for this module with the
perldoc command.

    perldoc EsaMattiTastula::FirstModule

You can also look for information at:

    RT, CPAN's request tracker (report bugs here)
        http://rt.cpan.org/NoAuth/Bugs.html?Dist=EsaMattiTastula-FirstModule

    AnnoCPAN, Annotated CPAN documentation
        http://annocpan.org/dist/EsaMattiTastula-FirstModule

    CPAN Ratings
        http://cpanratings.perl.org/d/EsaMattiTastula-FirstModule

    Search CPAN
        http://search.cpan.org/dist/EsaMattiTastula-FirstModule/


LICENSE AND COPYRIGHT

Copyright (C) 2015 Esa-Matti Tastula

This program is free software; you can redistribute it and/or modify it
under the terms of the the Artistic License (2.0). You may obtain a
copy of the full license at:

L<http://www.perlfoundation.org/artistic_license_2_0>

Any use, modification, and distribution of the Standard or Modified
Versions is governed by this Artistic License. By using, modifying or
distributing the Package, you accept this license. Do not use, modify,
or distribute the Package, if you do not accept this license.

If your Modified Version has been derived from a Modified Version made
by someone other than you, you are nevertheless required to ensure that
your Modified Version complies with the requirements of this license.

This license does not grant you the right to use any trademark, service
mark, tradename, or logo of the Copyright Holder.

This license includes the non-exclusive, worldwide, free-of-charge
patent license to make, have made, use, offer to sell, sell, import and
otherwise transfer the Package with respect to any patent claims
licensable by the Copyright Holder that are necessarily infringed by the
Package. If you institute patent litigation (including a cross-claim or
counterclaim) against any party alleging that the Package constitutes
direct or contributory patent infringement, then this Artistic License
to you shall terminate on the date that such litigation is filed.

Disclaimer of Warranty: THE PACKAGE IS PROVIDED BY THE COPYRIGHT HOLDER
AND CONTRIBUTORS "AS IS' AND WITHOUT ANY EXPRESS OR IMPLIED WARRANTIES.
THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
PURPOSE, OR NON-INFRINGEMENT ARE DISCLAIMED TO THE EXTENT PERMITTED BY
YOUR LOCAL LAW. UNLESS REQUIRED BY LAW, NO COPYRIGHT HOLDER OR
CONTRIBUTOR WILL BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, OR
CONSEQUENTIAL DAMAGES ARISING IN ANY WAY OUT OF THE USE OF THE PACKAGE,
EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

